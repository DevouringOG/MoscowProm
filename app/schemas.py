from pydantic import BaseModel, Field
from typing import Optional


class OrganizationCreate(BaseModel):
    inn: str = Field(..., min_length=10, max_length=12, pattern=r"^\d{10,12}$")
    name: str = Field(..., min_length=1, max_length=500)
    full_name: Optional[str] = Field(None, max_length=1000)
    status_spark: Optional[str] = Field(None, max_length=200)
    status_internal: Optional[str] = Field(None, max_length=200)
    status_final: Optional[str] = Field(None, max_length=200)
    legal_address: Optional[str] = Field(None, max_length=1000)
    production_address: Optional[str] = Field(None, max_length=1000)
    additional_address: Optional[str] = Field(None, max_length=1000)
    main_industry: Optional[str] = Field(None, max_length=200)
    main_subindustry: Optional[str] = Field(None, max_length=200)
    extra_industry: Optional[str] = Field(None, max_length=200)
    extra_subindustry: Optional[str] = Field(None, max_length=200)
    main_okved: Optional[str] = Field(None, max_length=100)
    main_okved_name: Optional[str] = Field(None, max_length=200)
    prod_okved: Optional[str] = Field(None, max_length=100)
    prod_okved_name: Optional[str] = Field(None, max_length=200)
    company_info: Optional[str] = None
    company_size: Optional[str] = Field(None, max_length=100)
    head_name: Optional[str] = Field(None, max_length=200)
    parent_org_name: Optional[str] = Field(None, max_length=500)
    parent_org_inn: Optional[str] = Field(None, max_length=12)
    head_contacts: Optional[str] = Field(None, max_length=500)
    head_email: Optional[str] = Field(None, max_length=200)
    phone: Optional[str] = Field(None, max_length=100)
    emergency_contact: Optional[str] = Field(None, max_length=500)
    website: Optional[str] = Field(None, max_length=300)
    email: Optional[str] = Field(None, max_length=200)
    district: Optional[str] = Field(None, max_length=200)
    region: Optional[str] = Field(None, max_length=200)
